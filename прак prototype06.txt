import java.util.ArrayList;
import java.util.List;

class Weapon implements Cloneable {
    private String type;
    private int damage;

    public Weapon(String type, int damage) {
        this.type = type;
        this.damage = damage;
    }

    public String getType() { return type; }
    public int getDamage() { return damage; }

    @Override
    public Weapon clone() {
        return new Weapon(this.type, this.damage);
    }

    @Override
    public String toString() {
        return "Weapon: " + type + ", Damage: " + damage;
    }
}

class Armor implements Cloneable {
    private String material;
    private int defense;

    public Armor(String material, int defense) {
        this.material = material;
        this.defense = defense;
    }

    public String getMaterial() { return material; }
    public int getDefense() { return defense; }

    @Override
    public Armor clone() {
        return new Armor(this.material, this.defense);
    }

    @Override
    public String toString() {
        return "Armor: " + material + ", Defense: " + defense;
    }
}

class Skill implements Cloneable {
    private String name;
    private String type;

    public Skill(String name, String type) {
        this.name = name;
        this.type = type;
    }

    public String getName() { return name; }
    public String getType() { return type; }

    @Override
    public Skill clone() {
        return new Skill(this.name, this.type);
    }

    @Override
    public String toString() {
        return "Skill: " + name + " (" + type + ")";
    }
}

class Character implements Cloneable {
    private String name;
    private int health, strength, agility, intelligence;
    private Weapon weapon;
    private Armor armor;
    private List<Skill> skills = new ArrayList<>();

    public Character(String name, int health, int strength, int agility, int intelligence, Weapon weapon, Armor armor) {
        this.name = name;
        this.health = health;
        this.strength = strength;
        this.agility = agility;
        this.intelligence = intelligence;
        this.weapon = weapon;
        this.armor = armor;
    }

    public void addSkill(Skill skill) {
        skills.add(skill);
    }

    @Override
    public Character clone() {
        Character clone = new Character(this.name, this.health, this.strength, this.agility, this.intelligence, this.weapon.clone(), this.armor.clone());
        for (Skill skill : this.skills) {
            clone.addSkill(skill.clone());
        }
        return clone;
    }

    @Override
    public String toString() {
        return "Character: " + name + "\n" +
                "Health: " + health + ", Strength: " + strength + ", Agility: " + agility + ", Intelligence: " + intelligence + "\n" +
                weapon + "\n" +
                armor + "\n" +
                "Skills: " + skills;
    }
}

public class MainPrototype {
    public static void main(String[] args) {
        // Создание оригинального персонажа
        Weapon sword = new Weapon("Sword", 50);
        Armor steelArmor = new Armor("Steel", 30);
        Character knight = new Character("Knight", 100, 80, 60, 50, sword, steelArmor);

        knight.addSkill(new Skill("Slash", "Physical"));
        knight.addSkill(new Skill("Shield Block", "Defense"));

        // Клонирование персонажа
        Character clonedKnight = knight.clone();

        // Изменение клона
        clonedKnight.addSkill(new Skill("Berserk", "Physical"));

        // Вывод оригинального и клонированного персонажей
        System.out.println("Original Character:");
        System.out.println(knight);

        System.out.println("\nCloned Character:");
        System.out.println(clonedKnight);
    }
}
